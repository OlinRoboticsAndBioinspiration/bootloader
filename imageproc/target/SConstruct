import os

xcCompiler = "/opt/microchip/xc16/v1.11"
#xcCompiler = "/Applications/microchip/xc16/v1.20/" #Aaron's path
imageProc = "../../../imageproc-lib"

assemblerFlags = "-Wa,-g" #pulled from makefile
AddOption('--srcaddr',
          dest = "srcaddr",
          type = "string",
          nargs = 1,
          action = "store",
          metavar = "BOARD_ADDRESS",
          default = "99")#board will have address x0110

AddOption('--destaddr',
          dest = "destaddr",
          type = "string",
          nargs = 1,
          action = "store",
          metavar = "RADIO_ADDRESS",
          default = "0")#if not specified, board will talk to white radio

env = Environment(PIC = '33FJ128MC706A',
                  CC = 'xc16-gcc', 
                  AS = 'xc16-as',
                  ASFLAGS = '-p33FJ128MC706A',
                  PROGSUFFIX = '.elf', 
                  CFLAGS = '-g -omf=elf -mcpu=$PIC -D__IMAGEPROC2  '+assemblerFlags+' -D__S'+GetOption('srcaddr')+' -D__D'+GetOption('destaddr'),
                  LINKFLAGS = "-omf=elf -mcpu=$PIC -Wl,--script=\"p33FJ128MC706A_Bootloader.gld\",--heap=8192,--stack=16",
                  #include paths
		  CPPPATH=[xcCompiler + "/support/dsPIC33F/h/",xcCompiler + "/support/dsPIC33F/inc/",
                  imageProc,"source"]);	

#Path to look for xc16 binaries. Can just use system path.
env.PrependENVPath('PATH',  os.environ['PATH'])

bin2hex = Builder(action = 'xc16-bin2hex $SOURCE -omf=elf',
                  suffix = 'hex', 
                  src_suffix = 'elf')
env.Append(BUILDERS = {'Hex' : bin2hex})
list = Builder(action = 'xc16-objdump -S -D $SOURCE > $TARGET', 
               suffix = 'lst', 
               src_suffix = 'elf')
env.Append(BUILDERS = {'List' : list})

imageProcLibFiles = [imageProc + "/" + n for n in [ 
    "utils.h", 
    "delay.s",
    "init_default.c",
    "payload.h",
    "payload.c",
    "init_default.h",
    "at86rf231.h"]]

bootloaderFiles = ["source/" + n for n in [
    "bootloader.c",
    "bootloader.h",
    "progmem.c",
    "progmem.h",
    "radio_polling.c",
    "radio_polling.h",
    "main.c",
    "memory.s"]]

staticLibs = [
    xcCompiler + "/lib/dsPIC33F/libp33FJ128MC706-elf.a", 
    xcCompiler + "/lib/libq-elf.a"]

env.Program('bootloader', imageProcLibFiles + bootloaderFiles + staticLibs)

env.Hex('bootloader')
#env.List('dynaroach') #Current throws a bunch of errors

